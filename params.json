{"name":"Jsonty","tagline":"","body":"\r\n## How to use\r\n\r\nMake fun with JSON serializer.\r\n\r\n\r\n```java\r\n\r\n    final Account account = ...;\r\n    final int status = 20;\r\n    \r\n    JSONModel model = new JSONModel() {\r\n        public void config(FieldExposer exposer) {\r\n            exposer.expose(status).withName(\"status\");\r\n            exposer.expose(account).withNameAndType(\"account\", AccountEntity.class);\r\n        }\r\n    };\r\n\r\n    //or use lambda in java8\r\n    JSONModel model = e -> {\r\n        e.expose(status).withName(\"status\");\r\n        e.expose(account).withNameAndType(\"account\", AccountEntity.class);\r\n    }\r\n\r\n    //to json\r\n    String json = new JSONBuilder(model).build();\r\n\r\n    //or write to stream, not implemented yet\r\n    new JSONBuilder(model).build(writer);\r\n\r\n```\r\n\r\nWhere `AccountEntity` implement `EntityModel` interface and defined fields will be exposed to json result.\r\n\r\n```java\r\n\r\n    public class AccountEntity implements EntityModel<Account>{\r\n        \r\n        public void config(Account account, FieldExposer exposer, Environment env) {\r\n            exposer.expose(account.getLogin()).withName(\"loginName\");\r\n            exposer.expose(account.getAvatar()).withName(\"avatar\");\r\n\r\n            //you can use nested EntityModel too\r\n            exposer.expose(account.getProfile()).withNameAndType(\"profile\", ProfileEntity.class);\r\n        }\r\n\r\n    }\r\n```\r\n\r\n## Extra\r\n\r\nYou can set a condition for field expose use `when` or `unless`\r\n\r\n```java\r\n\r\n    exposer.expose(\"xxxx\").withName(\"xxxx\").when(age > 18);\r\n    //or use unless\r\n    exposer.expose(\"xxxx\").withName(\"xxxx\").unless(age <= 18);\r\n```\r\n\r\nYou can alse pass enviroment use `plusEnv`and do some extra calculation while exposing field\r\n\r\n```java\r\n\r\n    Enviroment env = Enviroments.envWith(\"isAdmin\", user.isAdmin()) \r\n    exposer.expose(user.profile).withNameAndType(\"profile\", ProfileEntity.class).plusEnv(env);\r\n\r\n    //then in ProfileEntity\r\n\r\n    public class ProfileEntity implements EntityModel<Profile>{\r\n\r\n        public void config(Profile profile, FieldExposer exposer, Environment env) {\r\n            exposer.expose(xxx).withName(\"xx\");\r\n            if(env.contains(\"isAdmin\") && env.get(\"isAdmin\")){\r\n                exposer.expose(xxx).withName(\"onlyAviableForAdmin\"); \r\n            }\r\n        }\r\n    }\r\n```\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}